#ifndef nyr_scanner_h
#define nyr_scanner_h

typedef enum {
	TOKEN_LPAREN, TOKEN_RPAREN,
	TOKEN_LBRACE, TOKEN_RBRACE,
	TOKEN_LBRACKET, TOKEN_RBRACKET,
	TOKEN_DOT, TOKEN_COLON,
	TOKEN_COMMA, TOKEN_SEMICOLON,
	TOKEN_PLUS,
	TOKEN_MINUS,
	TOKEN_ASTERISK,
	TOKEN_SLASH,

	TOKEN_AMPERSAND, TOKEN_AMPERSAND_AMPERSAND,
	TOKEN_PIPE, TOKEN_PIPE_PIPE,
	TOKEN_BANG, TOKEN_BANG_EQUAL,
	TOKEN_EQUAL, TOKEN_EQUAL_EQUAL,
	TOKEN_GREATER, TOKEN_GREATER_EQUAL,
	TOKEN_LESS, TOKEN_LESS_EQUAL,

	// Literals
	TOKEN_IDENTIFIER,
	TOKEN_STRING,
	TOKEN_NUMBER,

	// Keywords
	TOKEN_LET,
	TOKEN_IF, TOKEN_ELSE,
	TOKEN_TRUE, TOKEN_FALSE,
	TOKEN_NULL,
	TOKEN_WHILE, TOKEN_DO, TOKEN_FOR,
	TOKEN_DEF, TOKEN_RETURN,
	TOKEN_CLASS, TOKEN_THIS, TOKEN_SUPER,

	// Builtins
	TOKEN_PRINT,

	TOKEN_ERROR, TOKEN_EOF,
} TokenType;

typedef struct {
	TokenType type;
	const char* start;
	int length;
	int line;
} Token;

void initScanner(const char* source);
Token scanToken();

#endif
