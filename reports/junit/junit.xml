<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="0" skipped="1" tests="153" time="4.046" timestamp="2021-08-25T16:04:52.734017" hostname="PC"><testcase classname="Nyr.Test.test_Env" name="testAddValue" time="0.001" /><testcase classname="Nyr.Test.test_Env" name="testGetValue" time="0.001" /><testcase classname="Nyr.Test.test_Env" name="testSetValue" time="0.001" /><testcase classname="Nyr.Test.test_Env" name="testFindOwner" time="0.001" /><testcase classname="Nyr.Test.test_Env" name="testAddFunc" time="0.001" /><testcase classname="Nyr.Test.test_Env" name="testGetFunc" time="0.001" /><testcase classname="Nyr.Test.test_Env" name="testFindFuncOwner" time="0.001" /><testcase classname="Nyr.Test.test_Tokenizer" name="testEmptyInput" time="0.001" /><testcase classname="Nyr.Test.test_Tokenizer" name="testCommentInput[// This is a comment]" time="0.001" /><testcase classname="Nyr.Test.test_Tokenizer" name="testCommentInput[\n\t\t\t/*\n\t\t\t\tThis is a\n\t\t\t\tmultiline\n\t\t\t\tcomment\n\t\t\t*/\n\t\t]" time="0.001" /><testcase classname="Nyr.Test.test_Tokenizer" name="testInput" time="0.001" /><testcase classname="Nyr.Test.test_Tokenizer" name="testTokenRepr" time="0.000" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testSimpleExpression[1 + 2-3]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testSimpleExpression[1 - 2--1]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testSimpleExpression[3 * 4-12]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testSimpleExpression[9 / 3-3]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testSimpleExpression[3 / 2-1.5]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testSimpleExpression[9 % 2-1]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testDivideBy0" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testStringConcatenation[Ba-nabra-Banabra]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testStringConcatenation[Spag-hetti-Spaghetti]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testStringConcatenation[string--string]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testStringConcatenation[-concat-concat]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_BinaryExpressions" name="testStringConcatenation[42-77-4277]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Functions" name="testFunction" time="0.002" /><testcase classname="Nyr.Test.tests_Interpreter.test_Functions" name="testFunctionWithIncorrectArguments" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Functions" name="testFunctionNotExists" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Functions" name="testFunctionAlreadyExists" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Functions" name="testRecursion" time="0.001"><skipped type="pytest.xfail" message="Recursion not yet working" /></testcase><testcase classname="Nyr.Test.tests_Interpreter.test_Interpreter" name="testEmptyStatement" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testIfElse[-4-x is 2 or less]" time="0.002" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testIfElse[0-x is 2 or less]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testIfElse[2-x is 2 or less]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testIfElse[3-x is greater than 2]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testIfElse[99999999999999999-x is greater than 2]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testLogicalOperatorsI[&amp;&amp;-expected0]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testLogicalOperatorsI[||-expected1]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testBitwiseOperatorsI[^-expected0]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testBitwiseOperatorsI[|-expected1]" time="0.002" /><testcase classname="Nyr.Test.tests_Interpreter.test_Logic" name="testBitwiseOperatorsI[&amp;-expected2]" time="0.002" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testWhileLoop" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testWhileLoopBreak" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testDoWhile" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testDoWhileBreak" time="0.002" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testForLoop" time="0.002" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testForLoopBreak" time="0.002" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testIterationOverflow[for (;;) { }-for]" time="0.077" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testIterationOverflow[while (true) { }-while]" time="0.193" /><testcase classname="Nyr.Test.tests_Interpreter.test_Loops" name="testIterationOverflow[do { } while (true);-do-while]" time="0.188" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testUninitializedVariable" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testMultipleUninitializedVariables[let x; let y;-expected0]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testMultipleUninitializedVariables[let x; let y;-expected1]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testTypeAssignments[let string = &quot;I am a string!&quot;;-expected0]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testTypeAssignments[let int = 42;-expected1]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testTypeAssignments[let float = 3.14159;-expected2]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testTypeAssignments[let bool = false;-expected3]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testTypeAssignments[let none = null;-expected4]" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testMixedInitialize" time="0.001" /><testcase classname="Nyr.Test.tests_Interpreter.test_Variables" name="testAssignWithBinaryExpr" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_ClassDeclaration" name="testClassWithMethod" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_ClassDeclaration" name="testClassInheritance" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_ClassDeclaration" name="testNewClassInstance" time="0.002" /><testcase classname="Nyr.Test.tests_Parser.test_Comments" name="testSingleLineComment" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Comments" name="testSingleLineCommentWithValue" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Comments" name="testMultiLineComment" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Comments" name="testMultiLineCommentWithValue" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Exceptions" name="testMissingSemicolon[42]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Exceptions" name="testMissingSemicolon[3.141]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Exceptions" name="testMissingSemicolon[&quot;Hello, World&quot;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionDeclarations" name="testEmptyBody" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionDeclarations" name="testWithoutArgs" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionDeclarations" name="testWithSingleArg" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionDeclarations" name="testWithMultipleArgs" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionCalls" name="testSimpleFunctionCallWithoutParams" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionCalls" name="testSimpleFunctionCall" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionCalls" name="testChainedFunctionCall" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionCalls" name="testMemberFunctionCall" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_FunctionDeclaration.TestFunctionCalls" name="testNestedFunctionCall" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Parser" name="testParseEmpty" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_AssignmentExpression" name="testSimpleAssignment" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_AssignmentExpression" name="testChainedSimpleAssignment" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_AssignmentExpression" name="testComplexAssignment" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_AssignmentExpression" name="testInvalidAssignment" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_BinaryExpression" name="testBinaryExpressionAdd" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_BinaryExpression" name="testBinaryExpressionNested" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_BinaryExpression" name="testBinaryExpressionMixed" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_BinaryExpression" name="testBinaryExpressionMultiply" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_BinaryExpression" name="testBinaryExpressionNestedMultiply" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_BinaryExpression" name="testBinaryExpressionParenthesisPriority" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_MemberExpression" name="testSimplePropertyAccess" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_MemberExpression" name="testSimplePropertyAssign" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_MemberExpression" name="testComputedPropertyAccess" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_MemberExpression" name="testComputedPropertyAssign" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_MemberExpression" name="testChainedAndMixedPropertyAccess" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Expressions.test_MemberExpression" name="testChainedAndMixedPropertyAssign" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_Numbers" name="testInteger[42;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_Numbers" name="testInteger[   42;   ]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_Numbers" name="testInteger[42  ;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_Numbers" name="testFloat[3.141;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_Numbers" name="testFloat[   3.141;   ]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_Numbers" name="testFloat[3.141  ;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_Numbers" name="testFloatTooManyDots" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_String" name="testEmptyString" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_String" name="testSimpleString[&quot;Hello&quot;;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_String" name="testSimpleString[    &quot;Hello&quot;;    ]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_String" name="testSimpleString[&quot;Hello&quot;  ;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_String" name="testComplexString[&quot;Hello, World&quot;;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_String" name="testComplexString[    &quot;Hello, World&quot;;    ]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_String" name="testComplexString[&quot;Hello, World&quot;  ;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Literals.test_String" name="testUnclosedString" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_BitwiseOperators" name="testBitwiseOperatorP[^]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_BitwiseOperators" name="testBitwiseOperatorP[|]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_BitwiseOperators" name="testBitwiseOperatorP[&amp;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_EqualityOperators" name="testEquals" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_EqualityOperators" name="testInequals" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_LogicalOperators" name="testLogicalOperatorsP[&amp;&amp;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_LogicalOperators" name="testLogicalOperatorsP[||]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_RelationalOperators" name="testRelationalOperators[&gt;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_RelationalOperators" name="testRelationalOperators[&gt;=]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_RelationalOperators" name="testRelationalOperators[&lt;]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_RelationalOperators" name="testRelationalOperators[&lt;=]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_UnaryOperator" name="testUnary[+]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_UnaryOperator" name="testUnary[-]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Operators.test_UnaryOperator" name="testUnary[!]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_BlockStatement" name="testBlockStatement" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_BlockStatement" name="testNestedBlockStatement" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_EmptyStatement" name="testEmptyStatement[;-expectedBody0]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_EmptyStatement" name="testEmptyStatement[;;-expectedBody1]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_EmptyStatement" name="testEmptyStatement[;;;-expectedBody2]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IfStatement" name="testSimpleIfStatement" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IfStatement" name="testIfStatementWithoutBlock" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IfStatement" name="testNestedIfStatement" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IfStatement" name="testIfElseStatement" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testWhileStatement" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testDoWhileStatement" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatement[init0-test0-update0]" time="0.002" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatement[init1-test1-None]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatement[init2-None-update2]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatement[init3-None-None]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatement[None-test4-update4]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatement[None-test5-None]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatement[None-None-update6]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatement[None-None-None]" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_IterationStatement" name="testForStatementPredefinedInit" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_StatementList" name="testMultipleStrings" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_StatementList" name="testMutlipleNumbers" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_StatementList" name="testMutlipleFloats" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_StatementList" name="testMixed" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_VariableStatement" name="testDeclarationWithAssign" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_VariableStatement" name="testDeclarationWithoutAssign" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_VariableStatement" name="testMultipleDeclarationsWithoutAssign" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_VariableStatement" name="testMultipleDeclarationsWithPartialAssign" time="0.001" /><testcase classname="Nyr.Test.tests_Parser.test_Statements.test_VariableStatement" name="testMultipleDeclarationsWithAllAssign" time="0.001" /></testsuite></testsuites>